QUESTION 1. 

Do the below programs in anonymous function & IIFE
 
 A. Print odd numbers in an array

 anonymous Function:

var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

var oddNumbers = numbers.filter(function(number) {
  return number % 2 !== 0;
});

console.log("Odd Numbers in the Array:", oddNumbers);

IIFE Function:

(function() {
  var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

  var oddNumbers = numbers.filter(function(number) {
    return number % 2 !== 0;
  });

  console.log("Odd Numbers in the Array:", oddNumbers);
})();


B. Convert all the strings to title caps in a string array

anonymous Function:

var stringArray = ["this is a sample", "title case example", "javascript is fun"];

var titleCapsArray = stringArray.map(function(str) {
  return str.split(' ').map(function(word) {
    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
  }).join(' ');
});

console.log("Title Caps Array:", titleCapsArray);


IIFE Function:

var stringArray = ["this is a sample", "title case example", "javascript is fun"];

var titleCapsArray = (function(arr) {
  return arr.map(function(str) {
    return str.split(' ').map(function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
    }).join(' ');
  })(stringArray);
})();

console.log("Title Caps Array:", titleCapsArray);


c. Sum of all numbers in an array 

anonymous function:

var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

var sum = function(arr) {
  return arr.reduce(function(total, num) {
    return total + num;
  }, 0);
}(numbers);

console.log("Sum of all numbers:", sum);



IIFE Function:

var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

var sum = (function(arr) {
  return arr.reduce(function(total, num) {
    return total + num;
  }, 0);
})(numbers);

console.log("Sum of all numbers:", sum);


D. Return all the prime numbers in an array

Anonymous Function:

var numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10];

var primeNumbers = numbers.filter(function(num) {
  if (num <= 1) return false; // 0 and 1 are not prime
  if (num <= 3) return true; // 2 and 3 are prime
  if (num % 2 === 0) return false; // Even numbers greater than 2 are not prime

  // Check for divisibility by odd numbers from 3 to the square root of num
  for (var i = 3; i <= Math.sqrt(num); i += 2) {
    if (num % i === 0) {
      return false; // If it's divisible by any odd number, it's not prime
    }
  }
  
  return true; // If it passes all tests, it's prime
});

console.log("Prime Numbers in the Array:", primeNumbers);


IIFE Function:

var numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10];

var primeNumbers = (function(arr) {
  return arr.filter(function(num) {
    if (num <= 1) return false; // 0 and 1 are not prime
    if (num <= 3) return true; // 2 and 3 are prime
    if (num % 2 === 0) return false; // Even numbers greater than 2 are not prime

    // Check for divisibility by odd numbers from 3 to the square root of num
    for (var i = 3; i <= Math.sqrt(num); i += 2) {
      if (num % i === 0) {
        return false; // If it's divisible by any odd number, it's not prime
      }
    }

    return true; // If it passes all tests, it's prime
  });
})(numbers);

console.log("Prime Numbers in the Array:", primeNumbers);


E. Return all the palindromes in an array

Anonymous function:

var strings = ["radar", "hello", "level", "world", "deified"];

var palindromes = strings.filter(function(str) {
  // Remove spaces and convert to lowercase for case-insensitive comparison
  var cleanStr = str.replace(/\s/g, "").toLowerCase();
  
  // Reverse the string and compare it with the original
  return cleanStr === cleanStr.split("").reverse().join("");
});

console.log("Palindromes in the Array:", palindromes);


IIFE function:

var strings = ["radar", "hello", "level", "world", "deified"];

var palindromes = (function(arr) {
  return arr.filter(function(str) {
    // Remove spaces and convert to lowercase for case-insensitive comparison
    var cleanStr = str.replace(/\s/g, "").toLowerCase();
    
    // Reverse the string and compare it with the original
    return cleanStr === cleanStr.split("").reverse().join("");
  });
})(strings);

console.log("Palindromes in the Array:", palindromes);


F. Return median of two sorted arrays of the same size.

Anonymous function:

var arr1 = [1, 3, 8, 12];
var arr2 = [7, 9, 10, 15];

var findMedian = function(nums1, nums2) {
  var mergedArray = nums1.concat(nums2);
  var sortedArray = mergedArray.sort(function(a, b) {
    return a - b;
  });

  var mid = Math.floor(sortedArray.length / 2);

  if (sortedArray.length % 2 === 0) {
    return (sortedArray[mid - 1] + sortedArray[mid]) / 2;
  } else {
    return sortedArray[mid];
  }
};

var median = findMedian(arr1, arr2);
console.log("Median of the two arrays:", median);


IIFE function:

var arr1 = [1, 3, 8, 12];
var arr2 = [7, 9, 10, 15];

var median = (function(nums1, nums2) {
  var mergedArray = nums1.concat(nums2);
  var sortedArray = mergedArray.sort(function(a, b) {
    return a - b;
  });

  var mid = Math.floor(sortedArray.length / 2);

  if (sortedArray.length % 2 === 0) {
    return (sortedArray[mid - 1] + sortedArray[mid]) / 2;
  } else {
    return sortedArray[mid];
  }
})(arr1, arr2);

console.log("Median of the two arrays:", median);


G. Remove duplicates from an array

Anonymous function:

var array = [1, 2, 2, 3, 4, 4, 5, 5, 6];

var uniqueArray = function(arr) {
  return arr.filter(function(item, index, self) {
    return self.indexOf(item) === index;
  });
}(array);

console.log("Array with duplicates removed:", uniqueArray);


IIFE Function:

var array = [1, 2, 2, 3, 4, 4, 5, 5, 6];

var uniqueArray = (function(arr) {
  return arr.filter(function(item, index, self) {
    return self.indexOf(item) === index;
  });
})(array);

console.log("Array with duplicates removed:", uniqueArray);




QUESTION 2. 

A. Print odd numbers in an array using arrow function.

var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

var oddNumbers = numbers.filter(number => number % 2 !== 0);

console.log("Odd Numbers in the Array:", oddNumbers);


B. Convert all the strings to title caps in a string array using arrow function.

var stringArray = ["this is a sample", "title case example", "javascript is fun"];

var titleCapsArray = stringArray.map(str => {
  return str
    .split(' ')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
    .join(' ');
});

console.log("Title Caps Array:", titleCapsArray);


C. Sum of all numbers in an array using arrow function.

var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

const sum = numbers.reduce((total, num) => total + num, 0);

console.log("Sum of all numbers:", sum);


D. Return all the prime numbers in an array using arrow function.

var numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10];

const isPrime = num => {
  if (num <= 1) return false;
  if (num <= 3) return true;
  if (num % 2 === 0) return false;

  for (let i = 3; i <= Math.sqrt(num); i += 2) {
    if (num % i === 0) return false;
  }
  
  return true;
};

const primeNumbers = numbers.filter(num => isPrime(num));

console.log("Prime Numbers in the Array:", primeNumbers);


E. Return all the palindromes in an array using arrow function.

var strings = ["radar", "hello", "level", "world", "deified"];

const isPalindrome = str => {
  const cleanStr = str.replace(/\s/g, "").toLowerCase();
  return cleanStr === cleanStr.split("").reverse().join("");
};

const palindromes = strings.filter(str => isPalindrome(str));

console.log("Palindromes in the Array:", palindromes);